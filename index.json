[
  {
    "authors": null,
    "categories": null,
    "content": "We use two open source AlphaGo Zero re-implementation: Leela-Zero and PhoenixGo, which are both super-human AI. An user can play againt Alpha-Go on a Raspberry Pi (RPi) with a touch screen. If there is Internet connection, the RPi is connected to a server with GPU, and the communication is defined by the GTP protocol (ver 2). Otherwise, the user can play against a weaker version of AlphaGo Zero locally. A chatroom is also implemented so that two humans can play Go together.\nLink to our report.\nLink to demo.\n",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "88b6f6a1e6e2864d503d6af52a547b2d",
    "permalink": "https://Daikon-Sun.github.io/project/ctci/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/ctci/",
    "section": "project",
    "summary": "CTCI",
    "tags": [
      "ML \u0026 DL",
      "Other"
    ],
    "title": "CTCI",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "60eb50e421a1117e4ddbb2a149099ecc",
    "permalink": "https://Daikon-Sun.github.io/project/fraig/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/fraig/",
    "section": "project",
    "summary": "FRAIG",
    "tags": [
      "EDA"
    ],
    "title": "FRAIG",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "e9399e8eda8b5ade105577b1de6481e1",
    "permalink": "https://Daikon-Sun.github.io/project/luluec/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/luluec/",
    "section": "project",
    "summary": "Name Mapping",
    "tags": [
      "EDA"
    ],
    "title": "LuLuEC",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "Four stages in the flow of Physical Design for Nanometer ICs are included in this project. The four stages are sorted in the order as if in actual design flow:\n1. Fiduccia-Mattheyses heuristic for solving 2-way, balanced VLSI hypergraph partitioning, \n2. B-star-tree with fast-simulated-annealing for solving fixed-outline floorplan problem, \n3. Abacus-based Legalizer with exact cost for solving single-cell height legalization, \n4. Efficient steiner tree construction based on spanning graphs. \nHere is my code in C/C++.\n",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "f1fbc2a092a82b6a7810b981935d9d5a",
    "permalink": "https://Daikon-Sun.github.io/project/physical_design/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/physical_design/",
    "section": "project",
    "summary": "Four stages in Physical Design: (1) Partitioning, (2) Floorplanning, (3) Legalization, and (4) Steiner-Tree Construction",
    "tags": [
      "EDA"
    ],
    "title": "Physical Design for Nanometer ICs",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "We use two open source AlphaGo Zero re-implementation: Leela-Zero and PhoenixGo, which are both super-human AI. An user can play againt Alpha-Go on a Raspberry Pi (RPi) with a touch screen. If there is Internet connection, the RPi is connected to a server with GPU, and the communication is defined by the GTP protocol (ver 2). Otherwise, the user can play against a weaker version of AlphaGo Zero locally. A chatroom is also implemented so that two humans can play Go together.\nLink to our report.\nLink to demo.\n",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "253988fc5a0f7518f0cc579f1dd17ee0",
    "permalink": "https://Daikon-Sun.github.io/project/pigo/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/pigo/",
    "section": "project",
    "summary": "Playing Against AlphaGo Zero on Raspberry Pi",
    "tags": [
      "ML \u0026 DL",
      "Other"
    ],
    "title": "Playing Against AlphaGo Zero on Raspberry Pi",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "c8ab786e2ac821472eb4ab6eb9f01f0c",
    "permalink": "https://Daikon-Sun.github.io/project/cnn-revisit/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/cnn-revisit/",
    "section": "project",
    "summary": "Revisit CNN history",
    "tags": [
      "ML \u0026 DL"
    ],
    "title": "Revisit CNN history",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": "",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "c1a345a1af0fffe12cb821b71337af8f",
    "permalink": "https://Daikon-Sun.github.io/project/slither/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/slither/",
    "section": "project",
    "summary": "Slither",
    "tags": [
      "ML \u0026 DL"
    ],
    "title": "Slither",
    "type": "project"
  },
  {
    "authors": null,
    "categories": null,
    "content": " The most simple example of the exploration versus exploitation dilemma is the stochastic multi-armed bandits (MAB) problem. Several algorithms have been proposed to tackle MAB problem, among them, algorithms based on upper confidence bound are the most successful and widely-used. Since the first paper about UCB [1] came out in 2002, there have been an ongoing research (UCBV, improved-UCB, EUCBV, MOSS, OCUCB) in improving the strategy to obtain a lower regret bound. In this paper, we survey starting from the original UCB [1], to improved versions UCBV [2], improved-UCB [3], and end at the state-of-the-art method [4]. We also introduce the lower bound for a family of algorithms (consistent algorithms defined in [5]) and show the optimality of KL-UCB [6] in special case.\nLink to paper.\nLink to slides.\nReference: [1] Finite-time Analysis of the Multiarmed Bandit Problem, Auer P.; and Cesa-Bianchi N., In Journal of Machine Learning, 2002.\n[2] Exploration–exploitation tradeoff using variance estimates in multi-armed bandits, Audibert J.-Y.; Munos R.; and Szepesvari C., In Theoretical Computer Science, 2009.\n[3] Action elimination and stopping conditions for the multi-armed bandit and reinforcement learning problems, E. Even-Dar; S. Mannor; Y. Mansour, In Journal of Machine Learning Research, 2006.\n[4] Efficient-UCBV: An Almost Optimal Algorithm Using Variance Estimates, Mukherjee S.; Naveen K.P.; Sudarsanam N.; Ravindran B., In AAAI Conference on Artificial Intelligence, 2018.\n[5] Asymptotically efficient adaptive allocation rules, Lai, Tze Leung; Robbins, Herbert; In Advances in applied mathematics, 1985.\n[6] The KL-UCB algorithm for bounded stochastic bandits and beyond, Aurélien Garivier; Olivier Cappé, In Proceedings of the 24th annual Conference On Learning Theory, 2011.\n",
    "date": 1541174400,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541174400,
    "objectID": "ceac859edee45667522e3472b1e974ab",
    "permalink": "https://Daikon-Sun.github.io/project/mpml/",
    "publishdate": "2018-11-03T00:00:00+08:00",
    "relpermalink": "/project/mpml/",
    "section": "project",
    "summary": "We survey starting from the original UCB, to improved versions (UCBV, improved-UCB), and end at the state-of-the-art method (EUCBV).",
    "tags": [
      "ML \u0026 DL",
      "Other"
    ],
    "title": "Solving Multi-Armed Bandits by Upper Confidence Bound (UCB) Algorithms",
    "type": "project"
  },
  {
    "authors": [
      "Chen-Hao Hsu",
      "Hao Chen",
      "Shao-Chun Hung",
      "**Fan-Keng Sun**",
      "Yao-Wen Chang"
    ],
    "categories": null,
    "content": "",
    "date": 1541088000,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541088000,
    "objectID": "545625917fe15d091df88366fcb9f45f",
    "permalink": "https://Daikon-Sun.github.io/publication/bus_routing/",
    "publishdate": "2018-11-02T00:00:00+08:00",
    "relpermalink": "/publication/bus_routing/",
    "section": "publication",
    "summary": "",
    "tags": [],
    "title": "Anonymous Title",
    "type": "publication"
  },
  {
    "authors": [
      "**Fan-Keng Sun**",
      "Yao-Wen Chang"
    ],
    "categories": null,
    "content": "",
    "date": 1541088000,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1541088000,
    "objectID": "04af29649060c06df874b2f34714976a",
    "permalink": "https://Daikon-Sun.github.io/publication/wirelength_model/",
    "publishdate": "2018-11-02T00:00:00+08:00",
    "relpermalink": "/publication/wirelength_model/",
    "section": "publication",
    "summary": "",
    "tags": [],
    "title": "Anonymous Title",
    "type": "publication"
  },
  {
    "authors": [
      "Shun-Yao Shih * ",
      "**Fan-Keng Sun** * ",
      "Hung-Yi Lee ( * denotes equal contribution )"
    ],
    "categories": null,
    "content": "",
    "date": 1538496000,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1538496000,
    "objectID": "be3f6402a7b2745fa4e66e482c780a2e",
    "permalink": "https://Daikon-Sun.github.io/publication/temporal_pattern_attention/",
    "publishdate": "2018-10-03T00:00:00+08:00",
    "relpermalink": "/publication/temporal_pattern_attention/",
    "section": "publication",
    "summary": "",
    "tags": [],
    "title": "Anonymous Title",
    "type": "publication"
  },
  {
    "authors": [
      "**Fan-Keng Sun**",
      "Hao Chen",
      "Ching-Yu Chen",
      "Chen-Hao Hsu",
      "Yao-Wen Chang"
    ],
    "categories": null,
    "content": "",
    "date": 1533571200,
    "expirydate": -62135596800,
    "kind": "page",
    "lang": "en",
    "lastmod": 1533571200,
    "objectID": "f211d0b0cb077d802244cb16b66ec0ca",
    "permalink": "https://Daikon-Sun.github.io/publication/detailed_routing/",
    "publishdate": "2018-08-07T00:00:00+08:00",
    "relpermalink": "/publication/detailed_routing/",
    "section": "publication",
    "summary": "Detailed routing is the most complicated and time-consuming stage in VLSI design and has become a critical process for advanced node enablement.\nTo handle the high complexity of modern detailed routing, initial detailed routing is often employed to minimize design-rule violations to facilitate the final detailed routing, even though it is still not violation-free during initial routing.\nThis paper presents a novel initial detailed routing algorithm to consider industrial design-rule constraints and optimize the total wirelength and via count.\nOur algorithm consists of three major stages:\n(1) an effective pin-access point generation method to identify valid points to model a complex pin shape,\n(2) a via-aware track assignment method to minimize the overlaps between assigned wire segments,\nand (3) a detailed routing algorithm with a novel negotiation-based rip-up and re-route scheme that enables multi-threading and honors global routing information while minimizing design-rule violations.\nExperimental results show that our router outperforms all the winning teams of the 2018 Initial Detailed Routing Contest, where the top-3 routers result in 14%, 41%, and 1224% higher costs than ours.\n",
    "tags": [],
    "title": "A Multithreaded Initial Detailed Routing Algorithm Considering Global Routing Guides",
    "type": "publication"
  }
]