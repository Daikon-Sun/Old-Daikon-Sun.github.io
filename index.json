[{"authors":null,"categories":null,"content":"Due to the high population density and popular usage of private car in Taiwan, traffic jam is a serious problem in Taiwan\u0026rsquo;s major cities, especially Taipei, Tainan, and Kaohsiung. Most traffic jam can be alleviated if all traffic signals are dynamically adjusted and optimized at different location and time period. Following the idea, we designed and implemented a low-cost and real-time traffic signal system on NVIDIA Jetson TK1 using Fast-RCNN to detected the traffic flow and reinforcement learning to train the traffic signal switching interval model. Our system is effective on simple traffic simulation, and thus won the 2017 National Technology and Research Scholarship presented by CTCI Foundation.\n","date":1542038400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542038400,"objectID":"ddae01a6a5c7e4622f2e4192903a37cf","permalink":"https://Daikon-Sun.github.io/project/ctci/","publishdate":"2018-11-13T00:00:00+08:00","relpermalink":"/project/ctci/","section":"project","summary":"Artificial Intelligence Traffic Control System: A Deep Learning Approach to Solve Structural Traffic Jam Problem","tags":["ML and DL"],"title":"AI Traffic Control System [CTCI Scholarship]","type":"project"},{"authors":null,"categories":null,"content":"Our work includes two stages. In the first stage we trained the Conditional GAN with only hair color and eyes color features. Then, a series of five corresponding anime images is produced. In the second stage, we proceeded further by collecting more features from the dataset, and by feeding more complicated input sentence, desired feature is then learned by Conditional GAN. We were then able to synthesis anime character with glasses or no glasses, along with different hair styles. We had also learned the most commonly appeared 200 features from the dataset and generated relevant images.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"b91eefa3a8006915c5781bb8987b574b","permalink":"https://Daikon-Sun.github.io/project/anime_gan/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/anime_gan/","section":"project","summary":"Generate anime images from given input text by the well known text-to-image synthesis method: Conditional Generative Adversarial Network (Conditional GAN).","tags":["ML and DL"],"title":"Anime Generation by Generative Adversarial Networks","type":"project"},{"authors":null,"categories":null,"content":"In this project, I implemented a special circuit representation, FRAIG, from a circuit description file.\nThe program performs the following processes:\n Parse a circuit description file in the AIGER format. Sweep out the gates that cannot be reached from primary outputs (excluding primary inputs). After this operation, all the gates that are originally “defined-but-not-used” will be deleted. Perform trivial circuit optimizations without altering the functionality, such as replacing a always-inverse fan-ins of an AND gate by a constant zero. Perform structural hash to merge the structurally equivalent signals (i.e. replace a gate with its functionally equivalent one) by comparing their gate types and permuting their inputs. Simulate boolean logic to group potentially equivalent gates into functionally equivalent candidate (FEC) pair. Use a boolean satisfiability solver to formally prove or disprove FEC pair and merge equivalent gates.  My program ranks top 5% among more than a hundred of students.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"52ae200880dbf2b93b2e5bbcd38564df","permalink":"https://Daikon-Sun.github.io/project/fraig/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/fraig/","section":"project","summary":"Implemented a special circuit representation, FRAIG, from a circuit description file, including parsing, sweeping, and circuit optimization.","tags":["EDA"],"title":"Functionally Reduced And-Inverter Graph (FRAIG)","type":"project"},{"authors":null,"categories":null,"content":"We assemble high dynamic range (HDR) images from a series of photographs under various exposures.\nThe features we have implemented are:\n Image alignment: median threshold bitmap algorithm. HDR imaging: Paul Debevec\u0026rsquo;s method. Tone mapping: Erik Reinhard\u0026rsquo;s method. Exposure fusion: Tom Mertens\u0026rsquo; method. Blob removal: rule-based method. Ghost removal: EA Khan\u0026rsquo;s method.  ","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"2be4e12837a468bcd34e1966c7095cd1","permalink":"https://Daikon-Sun.github.io/project/hdr/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/hdr/","section":"project","summary":"High dynamic range (HDR) imaging from a series of photographs under various exposures using OpenCV","tags":["Other"],"title":"High Dynamic Range (HDR) Imaging","type":"project"},{"authors":null,"categories":null,"content":"We construct panoramas from a series of photographs. The following feature-based process is run through in the order to create panoramas:\n Feature detection: scale invariant feature transform (SIFT) or multi-scale oriented patches (MSOP), with the aid of exhaustive search. Feature matching: exhaustive search and Haar’s method. Projection: cylindrical projection. Image stitching: bundle adjustment. Blending: multi-band blending.  ","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"b3cc4f04ca132387fb8b911f4d3ca142","permalink":"https://Daikon-Sun.github.io/project/panorama/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/panorama/","section":"project","summary":"Image stitching (Panorama) to form a wide-angle view of physical space using OpenCV","tags":["Other"],"title":"Image Stitching (Panorama)","type":"project"},{"authors":null,"categories":null,"content":"Four stages in the flow of Physical Design for Nanometer ICs are included in this project. The four stages are sorted in the order as if in actual design flow:\n1. Fiduccia-Mattheyses heuristic for solving 2-way, balanced VLSI hypergraph partitioning, \n2. B-star-tree with fast-simulated-annealing for solving fixed-outline floorplan problem, \n3. Abacus-based Legalizer with exact cost for solving single-cell height legalization, \n4. Efficient steiner tree construction based on spanning graphs. \n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"c24258923436c153e2fed3bdbc7f6b31","permalink":"https://Daikon-Sun.github.io/project/physical_design/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/physical_design/","section":"project","summary":"Four stages in Physical Design: (1) Partitioning, (2) Floorplanning, (3) Legalization, and (4) Steiner-Tree Construction","tags":["EDA","Code"],"title":"Physical Design for Nanometer ICs","type":"project"},{"authors":null,"categories":null,"content":"We use two open source AlphaGo Zero re-implementation: Leela-Zero and PhoenixGo, which are both super-human AI. An user can play againt Alpha-Go on a Raspberry Pi (RPi) with a touch screen. If there is Internet connection, the RPi is connected to a server with GPU, and the communication is defined by the GTP protocol (ver 2). Otherwise, the user can play against a weaker version of AlphaGo Zero locally. A chatroom is also implemented so that two humans can play Go together.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"a7645611ef0fbf1fbfdc1247bb64495c","permalink":"https://Daikon-Sun.github.io/project/pi_go/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/pi_go/","section":"project","summary":"Playing Against AlphaGo Zero on Raspberry Pi","tags":["ML and DL"],"title":"Playing Against AlphaGo Zero on Raspberry Pi","type":"project"},{"authors":null,"categories":null,"content":"","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"1b5baf9d4314047debb583aaa4078a90","permalink":"https://Daikon-Sun.github.io/slither/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/slither/","section":"","summary":"Slither","tags":["ML and DL"],"title":"Slither","type":"page"},{"authors":null,"categories":null,"content":" This project won the 3rd place in the Problem A at 2018 ICCAD CAD contest.\nIntroduction In the ASIC design flow, implementation tools change the names of design components to comply with the implementation rules while still keeping the information to track the design intention. For example, tools change the name \u0026ldquo;a[0]\u0026rdquo; into \u0026ldquo;a_0_\u0026rdquo; to follow the rule: “no special character”. Meanwhile, name mapping plays an important role in verification tools because good name mapping can help verification tools efficiently and correctly verify designs. Humans can easily tell the mapping rules/relations, but it is difficult for machines/tools to solve the mapping automatically.\nProblem Formulation In this contest, the problem formulation is program-building for name mapping. Contestants shall write a program that accepts a given set of mapping relations and generate a Python script. Then, the Python script can generate the same mapping result. The smaller size of the generated script is the better in this problem.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"2f59b974cc3bdbe9b16a963c6dc6c9d1","permalink":"https://Daikon-Sun.github.io/project/luluec/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/luluec/","section":"project","summary":"Name mapping plays an important role in verification tools because good name mapping can help verification tools efficiently and correctly verify designs.","tags":["EDA","Code"],"title":"Smart Equivalence Checking: Program-Building for Name Mapping","type":"project"},{"authors":null,"categories":null,"content":" The most simple example of the exploration versus exploitation dilemma is the stochastic multi-armed bandits (MAB) problem. Several algorithms have been proposed to tackle MAB problem, among them, algorithms based on upper confidence bound are the most successful and widely-used. Since the first paper about UCB [1] came out in 2002, there have been an ongoing research (UCBV, improved-UCB, EUCBV, MOSS, OCUCB) in improving the strategy to obtain a lower regret bound. In this paper, we survey starting from the original UCB [1], to improved versions UCBV [2], improved-UCB [3], and end at the state-of-the-art method [4]. We also introduce the lower bound for a family of algorithms (consistent algorithms defined in [5]) and show the optimality of KL-UCB [6] in special case.\nReference: [1] Finite-time Analysis of the Multiarmed Bandit Problem, Auer P.; and Cesa-Bianchi N., In Journal of Machine Learning, 2002.\n[2] Exploration–exploitation tradeoff using variance estimates in multi-armed bandits, Audibert J.-Y.; Munos R.; and Szepesvari C., In Theoretical Computer Science, 2009.\n[3] Action elimination and stopping conditions for the multi-armed bandit and reinforcement learning problems, E. Even-Dar; S. Mannor; Y. Mansour, In Journal of Machine Learning Research, 2006.\n[4] Efficient-UCBV: An Almost Optimal Algorithm Using Variance Estimates, Mukherjee S.; Naveen K.P.; Sudarsanam N.; Ravindran B., In AAAI Conference on Artificial Intelligence, 2018.\n[5] Asymptotically efficient adaptive allocation rules, Lai, Tze Leung; Robbins, Herbert; In Advances in applied mathematics, 1985.\n[6] The KL-UCB algorithm for bounded stochastic bandits and beyond, Aurélien Garivier; Olivier Cappé, In Proceedings of the 24th annual Conference On Learning Theory, 2011.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"4741ca36cd2b75439c4d55a624c261a5","permalink":"https://Daikon-Sun.github.io/project/mpml/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/mpml/","section":"project","summary":"Our survey starts from the original UCB, to improved versions (UCBV, improved-UCB), and end at the state-of-the-art method (EUCBV).","tags":["ML and DL"],"title":"Solving Multi-Armed Bandits by Upper Confidence Bound (UCB) Algorithms","type":"project"},{"authors":null,"categories":null,"content":"We use two open source AlphaGo Zero re-implementation: Leela-Zero and PhoenixGo, which are both super-human AI. An user can play againt Alpha-Go on a Raspberry Pi (RPi) with a touch screen. If there is Internet connection, the RPi is connected to a server with GPU, and the communication is defined by the GTP protocol (ver 2). Otherwise, the user can play against a weaker version of AlphaGo Zero locally. A chatroom is also implemented so that two humans can play Go together.\nLink to our report.\nLink to demo.\n","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"ddd1a6deb40fed09b0d27cd21497a130","permalink":"https://Daikon-Sun.github.io/vfx_final/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/vfx_final/","section":"","summary":"VFX","tags":["Other"],"title":"VFX","type":"page"},{"authors":null,"categories":null,"content":" Introduction Convolutional Neural Network (CNN) was first proposed by Y. LeCun et al. in 1989, who successfully trained a CNN for digit classification. However, not until 2012, when A.Krizhevsky et al. applied this architecture in ILSVRC-2012 competition and won the first place with top-5 error rates of 15.3% (which improves by more than 10% compared to previous feature engineering methods), did CNN take over computer vision. In recent years, the advance of GPU, the availability of much larger training sets, and better model regularization strategies all contribute to the dramatic improvement in performance. Nevertheless, on the outset, it was unclear what CNN actually learned and thus cast doubt on the model. In this project, we discuss and compare different methods of visualization on various well-known models, in order to gain further sights into the structure and success of CNN.\nVisualization Methods  Activity: Visualize the output of a neuron for a given image. Deconvolutional Network: Reconstruct the input image from a given neuron by unpooling, ReLu and deconvolution (transpose convolution). Saliency Map: Calculate the gradient of a score model for a class with respect to the input image. Deep Generator Network (DGN): Use a pretrained image generator instead of hand-crafted priors. Plug-and-Play Generative Networks (PPGN): Improve from DGN using denoising autoencoder to restrict the input-code space.  ","date":1541174400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541174400,"objectID":"0dcc19d60f33a0de8a7a0433ca27fe31","permalink":"https://Daikon-Sun.github.io/project/cnn_vis/","publishdate":"2018-11-03T00:00:00+08:00","relpermalink":"/project/cnn_vis/","section":"project","summary":"In our final project, we organize all common methods to visualize and understand CNN on the pretrained and popular AlexNet, VGG, GooLeNet and ResNet. This enables us to build up understanding of CNN, but also shows that visualization is not enough for deep CNN.","tags":["ML and DL"],"title":"What does Deep CNN learn? Visualization of Popular Deep CNN Models","type":"project"},{"authors":["Chen-Hao Hsu","Shao-Chun Hung","Hao Chen","**Fan-Keng Sun**","Yao-Wen Chang"],"categories":null,"content":"","date":1541088000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541088000,"objectID":"545625917fe15d091df88366fcb9f45f","permalink":"https://Daikon-Sun.github.io/publication/bus_routing/","publishdate":"2018-11-02T00:00:00+08:00","relpermalink":"/publication/bus_routing/","section":"publication","summary":"","tags":[],"title":"A DAG-Based Algorithm for Obstacle-Aware Topology-Matching On-Track Bus Routing","type":"publication"},{"authors":["**Fan-Keng Sun**","Yao-Wen Chang"],"categories":null,"content":"","date":1541088000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541088000,"objectID":"04af29649060c06df874b2f34714976a","permalink":"https://Daikon-Sun.github.io/publication/wirelength_model/","publishdate":"2018-11-02T00:00:00+08:00","relpermalink":"/publication/wirelength_model/","section":"publication","summary":"","tags":[],"title":"BiG: A Bivariate Gradient-Based Wirelength Model for Analytical Circuit Placement","type":"publication"},{"authors":["Shun-Yao Shih * ","**Fan-Keng Sun** * ","Hung-Yi Lee ( * denotes equal contribution )"],"categories":null,"content":"Link to the paper.\nLink to the arxiv.\n","date":1538496000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1538496000,"objectID":"be3f6402a7b2745fa4e66e482c780a2e","permalink":"https://Daikon-Sun.github.io/publication/temporal_pattern_attention/","publishdate":"2018-10-03T00:00:00+08:00","relpermalink":"/publication/temporal_pattern_attention/","section":"publication","summary":"Forecasting of multivariate time series data, for instance the prediction\nof electricity consumption, solar power production, and polyphonic piano\npieces, has numerous valuable applications. However, complex and non-linear\ninterdependencies between time steps and series complicate this task. To obtain\naccurate prediction, it is crucial to model long-term dependency in time\nseries data, which can be achieved by recurrent neural networks (RNNs) with\nan attention mechanism. The typical attention mechanism reviews the information\nat each previous time step and selects relevant information to help\ngenerate the outputs; however, it fails to capture temporal patterns across\nmultiple time steps. In this paper, we propose using a set of filters to extract\ntime-invariant temporal patterns, similar to transforming time series data into\nits “frequency domain”. Then we propose a novel attention mechanism to select\nrelevant time series, and use its frequency domain information for multivariate\nforecasting. We apply the proposed model on several real-world tasks\nand achieve state-of-the-art performance in all of these with a single exception.\nOur source code is available at https://github.com/gantheory/TPA-LSTM.\n","tags":[],"title":"Temporal Pattern Attention for Multivariate Time Series Forecasting","type":"publication"},{"authors":["**Fan-Keng Sun**","Hao Chen","Ching-Yu Chen","Chen-Hao Hsu","Yao-Wen Chang"],"categories":null,"content":"Link to the paper.\nLink to the ACM DL.\n","date":1533571200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1533571200,"objectID":"f211d0b0cb077d802244cb16b66ec0ca","permalink":"https://Daikon-Sun.github.io/publication/detailed_routing/","publishdate":"2018-08-07T00:00:00+08:00","relpermalink":"/publication/detailed_routing/","section":"publication","summary":"Detailed routing is the most complicated and time-consuming stage in VLSI design and has become a critical process for advanced node enablement.\nTo handle the high complexity of modern detailed routing, initial detailed routing is often employed to minimize design-rule violations to facilitate the final detailed routing, even though it is still not violation-free during initial routing.\nThis paper presents a novel initial detailed routing algorithm to consider industrial design-rule constraints and optimize the total wirelength and via count.\nOur algorithm consists of three major stages:\n(1) an effective pin-access point generation method to identify valid points to model a complex pin shape,\n(2) a via-aware track assignment method to minimize the overlaps between assigned wire segments,\nand (3) a detailed routing algorithm with a novel negotiation-based rip-up and re-route scheme that enables multi-threading and honors global routing information while minimizing design-rule violations.\nExperimental results show that our router outperforms all the winning teams of the 2018 Initial Detailed Routing Contest, where the top-3 routers result in 14%, 41%, and 1224% higher costs than ours.\n","tags":[],"title":"A Multithreaded Initial Detailed Routing Algorithm Considering Global Routing Guides","type":"publication"}]